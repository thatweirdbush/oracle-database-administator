------------------------------ VIEW ------------------------
CREATE OR REPLACE VIEW UV_N09_NHANVIEN
AS
    SELECT * FROM N09_NHANVIEN;
    
CREATE OR REPLACE VIEW UV_N09_BOPHAN
AS
    SELECT * FROM N09_BOPHAN;
    
CREATE OR REPLACE VIEW UV_N09_LOAIBC
AS
    SELECT * FROM N09_LOAIBC;
    
CREATE OR REPLACE VIEW UV_N09_SANPHAM
AS
    SELECT * FROM N09_SANPHAM;
    
CREATE OR REPLACE VIEW UV_N09_LOAISP
AS
    SELECT * FROM N09_LOAISP;
        
CREATE OR REPLACE VIEW UV_N09_HOADONBANHANG
AS
    SELECT * FROM N09_HOADONBANHANG;    
    
CREATE OR REPLACE VIEW UV_N09_CTHDBH
AS
    SELECT * FROM N09_CTHDBH;    
       
CREATE OR REPLACE VIEW UV_N09_HOADONNHAPHANG
AS
    SELECT * FROM N09_HOADONNHAPHANG;   
    
CREATE OR REPLACE VIEW UV_N09_CTHDNH
AS
    SELECT * FROM N09_CTHDNH;      
    
----------------------------------- STORE PROCEDURED ---------------------------------
-- TAO USER NVQL, USERNAME = MANV, PASS = MANV 
CREATE OR REPLACE PROCEDURE USP_CREATE_USER_NVQL
AS 
    CURSOR CUR IS (SELECT MANV
                    FROM N09_NHANVIEN
                    WHERE MANV NOT IN (SELECT USERNAME FROM ALL_USERS) AND BPLAMVIEC = 'BP001'); 
     STRSQL VARCHAR(2000); 
     USR VARCHAR2(5); 
BEGIN 
     OPEN CUR; 
     STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE'; 
     EXECUTE IMMEDIATE(STRSQL); 
     LOOP 
         FETCH CUR INTO USR; 
         EXIT WHEN CUR%NOTFOUND; 
         
         STRSQL := 'CREATE USER '||USR||' IDENTIFIED BY '||USR; 
         EXECUTE IMMEDIATE(STRSQL); 
         STRSQL := 'GRANT CONNECT TO '||USR; 
         EXECUTE IMMEDIATE(STRSQL); 
     END LOOP; 
     STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = FALSE'; 
     EXECUTE IMMEDIATE(STRSQL); 
     CLOSE CUR; 
END; 

-- TAO ROLE NVQL
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE; 
CREATE ROLE C##RL_NVQL;

---- THEM USER NVQL VAO ROLE C##RL_NVQL
CREATE OR REPLACE PROCEDURE USP_ADD_USER_NVQL
 (STRROLE VARCHAR) 
AS 
     CURSOR CUR IS (SELECT MANV
                     FROM N09_NHANVIEN
                     WHERE MANV IN (SELECT USERNAME FROM ALL_USERS) AND BPLAMVIEC = 'BP001'
                    ); 
     STRSQL VARCHAR(2000); 
     USR VARCHAR2(5); 
BEGIN 
     OPEN CUR; 
     LOOP 
         FETCH CUR INTO USR; 
         EXIT WHEN CUR%NOTFOUND; 
         
         STRSQL := 'GRANT '||STRROLE||' TO '||USR; 
         EXECUTE IMMEDIATE (STRSQL); 
     END LOOP; 
     CLOSE CUR; 
END; 

EXEC USP_CREATE_USER_NVQL;
EXEC USP_ADD_USER_NVQL('C##RL_NVQL');

--NVKHO
-- TAO USER NVKHO, USERNAME = MANV, PASS = MANV 
CREATE OR REPLACE PROCEDURE USP_CREATE_USER_NVKHO
AS 
    CURSOR CUR IS (SELECT MANV
                    FROM N09_NHANVIEN
                    WHERE MANV NOT IN (SELECT USERNAME FROM ALL_USERS) AND BPLAMVIEC = 'BP004'); 
     STRSQL VARCHAR(2000); 
     USR VARCHAR2(5); 
BEGIN 
     OPEN CUR; 
     STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE'; 
     EXECUTE IMMEDIATE(STRSQL); 
     LOOP 
         FETCH CUR INTO USR; 
         EXIT WHEN CUR%NOTFOUND; 
         
         STRSQL := 'CREATE USER '||USR||' IDENTIFIED BY '||USR; 
         EXECUTE IMMEDIATE(STRSQL); 
         STRSQL := 'GRANT CONNECT TO '||USR; 
         EXECUTE IMMEDIATE(STRSQL); 
     END LOOP; 
     STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = FALSE'; 
     EXECUTE IMMEDIATE(STRSQL); 
     CLOSE CUR; 
END; 

-- TAO ROLE NVKHO
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE; 
CREATE ROLE C##RL_NVKHO;

---- THEM USER NVQL VAO ROLE C##RL_NVKHO;
CREATE OR REPLACE PROCEDURE USP_ADD_USER_NVKHO
 (STRROLE VARCHAR) 
AS 
     CURSOR CUR IS (SELECT MANV
                     FROM N09_NHANVIEN
                     WHERE MANV IN (SELECT USERNAME FROM ALL_USERS) AND BPLAMVIEC = 'BP004'
                    ); 
     STRSQL VARCHAR(2000); 
     USR VARCHAR2(5); 
BEGIN 
     OPEN CUR; 
     LOOP 
         FETCH CUR INTO USR; 
         EXIT WHEN CUR%NOTFOUND; 
         
         STRSQL := 'GRANT '||STRROLE||' TO '||USR; 
         EXECUTE IMMEDIATE (STRSQL); 
     END LOOP; 
     CLOSE CUR; 
END; 

EXEC USP_CREATE_USER_NVKHO;
EXEC USP_ADD_USER_NVKHO('C##RL_NVKHO');

-- nhân viên quản lý có thể xem toàn bộ báo cáo mà nhân viên gửi cho mình
CREATE OR REPLACE VIEW UV_BAOCAO
AS
    SELECT *
    FROM SYS.N09_BAOCAO
    WHERE NGUOINHAN = SYS_CONTEXT ('userenv', 'session_user');
    
GRANT SELECT ON SYS.UV_BAOCAO TO C##RL_NVQL;

conn NV001/NV001
SELECT * FROM SYS.UV_BAOCAO; 

-- quản lý có thể xem thông tin nhân viên mà mình quản lý
CREATE OR REPLACE VIEW UV_NHANVIENMINHQUANLY
AS
    SELECT *
    FROM SYS.N09_NHANVIEN
    WHERE MANQL = SYS_CONTEXT ('userenv', 'session_user');
    
GRANT SELECT ON SYS.UV_NHANVIENMINHQUANLY TO C##RL_NVQL;

conn NV003/NV003
SELECT * FROM SYS.UV_NHANVIENMINHQUANLY; 

-- nhân viên kho có thể xem thông tin sản phẩm trừ cột giá nhập
CREATE OR REPLACE VIEW UV_THONGTINSANPHAM
AS
    SELECT MASP, TENSP, LOAISP, SOLUONGTON, GIABAN, TINHTRANG
    FROM SYS.N09_SANPHAM;
    
GRANT SELECT ON SYS.UV_THONGTINSANPHAM TO C##RL_NVKHO;

conn NV012/NV012
SELECT * FROM SYS.UV_THONGTINSANPHAM; 

-- nhân viên kho có thể xem thông tin loại sp   
CREATE OR REPLACE VIEW UV_THONGTINLOAISANPHAM
AS
    SELECT*
    FROM SYS.N09_LOAISP;
    
GRANT SELECT ON SYS.UV_THONGTINLOAISANPHAM TO C##RL_NVKHO;

conn NV012/NV012
SELECT * FROM SYS.UV_THONGTINLOAISANPHAM; 

-- nhân viên kho có thể xem thông tin HDNH trừ cột tổng tiền
CREATE OR REPLACE VIEW UV_THONGTINHDNH
AS
    SELECT   MAHD,NGAYLAP , NGUOILAP 
    FROM SYS.N09_HOADONNHAPHANG;
    
GRANT SELECT ON SYS.UV_THONGTINHDNH TO C##RL_NVKHO;

conn NV012/NV012
SELECT * FROM SYS.UV_THONGTINHDNH; 

-- nhân viên kho có thể xem thông tin CTHDNH trừ cột giá nhập
CREATE OR REPLACE VIEW UV_THONGTINCTHDNH
AS
    SELECT MAHD, MASP, SOLUONG
    FROM SYS.N09_CTHDNH;
    
GRANT SELECT ON SYS.UV_THONGTINCTHDNH TO C##RL_NVKHO;

conn NV012/NV012
SELECT * FROM SYS.UV_THONGTINCTHDNH; 

--------------------------------------------------------------------------------------------
SELECT USER FROM dual;

--proc create user
--username, password
CREATE OR REPLACE PROCEDURE USP_CREATEUSER
(USERNAME VARCHAR, PASS VARCHAR)
AS
 STRSQL VARCHAR(2000);
BEGIN
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE';
    EXECUTE IMMEDIATE(STRSQL);
    STRSQL := 'CREATE USER '||USERNAME||' IDENTIFIED BY '||PASS;
    EXECUTE IMMEDIATE(STRSQL);
    STRSQL := 'GRANT CONNECT TO '||USERNAME;
    EXECUTE IMMEDIATE(STRSQL);
END;

--test
EXEC USP_CREATEUSER('hp', '123');

--DROP USER hp CASCADE;
--proc xóa user
CREATE OR REPLACE PROCEDURE USP_DROPUSER
(USERNAME VARCHAR)
AS
 STRSQL VARCHAR(2000);
BEGIN
    STRSQL := 'DROP USER '||USERNAME;
    EXECUTE IMMEDIATE(STRSQL);
END;

--query danh sách user
SELECT * FROM SYS.ALL_USERS;
---cơ mà query này lại ra mấy cái users mà mình k cần luôn 


-- quyền gì trên bảng gì, 1 lần 1 quyền thoi
CREATE OR REPLACE PROCEDURE USP_GRANT_PRIVILEGE (
  GRANT_PRIVILEGE VARCHAR,
  GRANT_TABLE VARCHAR,
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  STRSQL := 'GRANT ' || GRANT_PRIVILEGE || ' ON ' || GRANT_TABLE || ' TO ' || USERNAME;
  EXECUTE IMMEDIATE(STRSQL);
END;

CREATE OR REPLACE PROCEDURE USP_GRANT_PRIVILEGE_WITH_GRANT_OPTION (
  GRANT_PRIVILEGE VARCHAR,
  GRANT_TABLE VARCHAR,
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  -- No need for the ALTER SESSION line as you're not modifying session state
  STRSQL := 'GRANT ' || GRANT_PRIVILEGE || ' ON ' || GRANT_TABLE || ' TO ' || USERNAME|| ' WITH GRANT OPTION';
  EXECUTE IMMEDIATE(STRSQL);
END;
--test
EXEC USP_GRANT_PRIVILEGE('SELECT', 'N09_SANPHAM', 'HP');
EXEC USP_GRANT_PRIVILEGE_WITH_GRANT_OPTION('SELECT', 'N09_NHANVIEN', 'HP');


-- QUERY CÁC PRIVILEGES CỦA 1 USERS
-- cái này mình sẽ thay thế username vào chỗ grantee í, nên là mình hông biết có cần phải viết luôn proc hong

-- QUERY CÁC PRIVILEGES CỦA 1 USERS

--SELECT PRIVILEGE, TABLE_NAME, GRANTABLE
--FROM USER_TAB_PRIVS
--WHERE grantee = 'HP';

CREATE OR REPLACE PROCEDURE USP_GET_USER_PRIVILEGES (
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  STRSQL := 'SELECT PRIVILEGE, TABLE_NAME, GRANTABLE FROM USER_TAB_PRIVS WHERE grantee = ' || ''''||USERNAME|| '''';
  EXECUTE IMMEDIATE(STRSQL);
  
END;

Set serveroutput on; 
exec USP_GET_USER_PRIVILEGES('HP');

--REVOKE PRIVILEGE
--REVOKE SELECT ON N09_SANPHAM  FROM hp;
CREATE OR REPLACE PROCEDURE USP_REVOKE_PRIVILEGE (
  REVOKE_PRIVILEGE VARCHAR,
  REVOKE_TABLE VARCHAR,
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  -- No need for the ALTER SESSION line as you're not modifying session state
  STRSQL := 'REVOKE ' || REVOKE_PRIVILEGE || ' ON ' || REVOKE_TABLE || ' FROM ' || USERNAME;
  EXECUTE IMMEDIATE(STRSQL);
END;

--test
EXEC USP_REVOKE_PRIVILEGE('SELECT', 'N09_NHANVIEN', 'HP');

-- query role người dùng
SELECT
  GRANTEE,
  GRANTED_ROLE,
  ADMIN_OPTION
FROM DBA_ROLE_PRIVS
WHERE GRANTEE  = 'HP';

CREATE OR REPLACE PROCEDURE USP_GET_USER_ROLES (
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  STRSQL := 'SELECT GRANTEE, GRANTED_ROLE, ADMIN_OPTION FROM DBA_ROLE_PRIVS WHERE GRANTEE  = ' || ''''||USERNAME|| '''';
  EXECUTE IMMEDIATE(STRSQL);  
END;

exec USP_GET_USER_ROLES('HP');


--grant role cho user
CREATE OR REPLACE PROCEDURE USP_GRANT_ROLE (
  STRROLE VARCHAR,
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  STRSQL := 'GRANT '||STRROLE||' TO '||USERNAME; 
  EXECUTE IMMEDIATE (STRSQL); 
END;

CREATE OR REPLACE PROCEDURE USP_GRANT_ROLE_WITH_ADMIN_OPTION (
  STRROLE VARCHAR,
  USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  STRSQL := 'GRANT '||STRROLE||' TO '||USERNAME|| ' WITH ADMIN OPTION';
  EXECUTE IMMEDIATE(STRSQL);
END;

--TEST
EXEC USP_GRANT_ROLE ('C##RL_NVQL', 'HP');
EXEC USP_GRANT_ROLE_WITH_ADMIN_OPTION('C##RL_NVQL', 'HP');

--revoke role của user 
CREATE OR REPLACE PROCEDURE USP_REVOKE_ROLE (
   STRROLE VARCHAR,
   USERNAME VARCHAR
)
AS
  STRSQL VARCHAR(2000);
BEGIN
  STRSQL := 'REVOKE ' || STRROLE || ' FROM ' || USERNAME;
  EXECUTE IMMEDIATE(STRSQL);
END;
EXEC USP_REVOKE_ROLE('C##RL_NVQL', 'HP');


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    